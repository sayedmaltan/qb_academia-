import 'package:flutter/material.dart';

class NotificationsScreen extends StatefulWidget {
  const NotificationsScreen({super.key});

  @override
  State<NotificationsScreen> createState() => _NotificationsScreenState();
}

class _NotificationsScreenState extends State<NotificationsScreen> {
  List<Map<String, String>> notifications = [
    {
      'title': 'üì¢ ÿ™ŸÖ ÿ•ÿ∂ÿßŸÅÿ© ŸÉŸàÿ±ÿ≥ ÿ¨ÿØŸäÿØ!',
      'body': 'ÿßŸÑÿ™ÿ≠ŸÇ ÿ®ŸÉŸàÿ±ÿ≥ ÿßŸÑÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ™ŸÜŸÅŸäÿ∞Ÿäÿ© ÿßŸÑÿ¢ŸÜ Ÿàÿßÿ≥ÿ™ŸÅÿØ ŸÖŸÜ ÿßŸÑŸÖÿ≠ÿßÿ∂ÿ±ÿßÿ™ ÿßŸÑÿ≠ÿµÿ±Ÿäÿ©.',
      'time': 'ŸÖŸÜÿ∞ 5 ÿØŸÇÿßÿ¶ŸÇ'
    },
    {
      'title': '‚úÖ ÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ÿ™ÿ≥ÿ¨ŸäŸÑŸÉ',
      'body': 'ÿ£ŸÜÿ™ ÿßŸÑÿ¢ŸÜ ŸÖÿ≥ÿ¨ŸëŸÑ ÿ®ŸÉŸàÿ±ÿ≥: "English Level 1". ÿ®ÿßŸÑÿ™ŸàŸÅŸäŸÇ üí™',
      'time': 'ÿßŸÑŸäŸàŸÖ - 10:00 ÿµÿ®ÿßÿ≠Ÿãÿß'
    },
    {
      'title': 'üéØ ŸÜÿµŸäÿ≠ÿ© ÿØÿ±ÿßÿ≥Ÿäÿ©',
      'body': 'ŸÇÿ≥ŸÖ ŸàŸÇÿ™ŸÉ Ÿàÿ≠ÿßŸàŸÑ ÿ™ÿ∞ÿßŸÉÿ± ÿ®ÿ™ÿ±ŸÉŸäÿ≤ 25 ÿØŸÇŸäŸÇÿ© Ÿàÿßÿ±ÿ™ÿßÿ≠ ÿ®ÿπÿØŸáÿßÿå ÿßÿ≥ŸÖŸáÿß ÿ∑ÿ±ŸäŸÇÿ© Pomodoro üòâ',
      'time': 'ÿ£ŸÖÿ≥ - 8:45 ŸÖÿ≥ÿßÿ°Ÿã'
    },
    {
      'title': 'üì¢ ÿ™ŸÖ ÿ•ÿ∂ÿßŸÅÿ© ŸÉŸàÿ±ÿ≥ ÿ¨ÿØŸäÿØ!',
      'body': 'ÿßŸÑÿ™ÿ≠ŸÇ ÿ®ŸÉŸàÿ±ÿ≥ ÿßŸÑÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ™ŸÜŸÅŸäÿ∞Ÿäÿ© ÿßŸÑÿ¢ŸÜ Ÿàÿßÿ≥ÿ™ŸÅÿØ ŸÖŸÜ ÿßŸÑŸÖÿ≠ÿßÿ∂ÿ±ÿßÿ™ ÿßŸÑÿ≠ÿµÿ±Ÿäÿ©.',
      'time': 'ŸÖŸÜÿ∞ 5 ÿØŸÇÿßÿ¶ŸÇ'
    },
    {
      'title': '‚úÖ ÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ÿ™ÿ≥ÿ¨ŸäŸÑŸÉ',
      'body': 'ÿ£ŸÜÿ™ ÿßŸÑÿ¢ŸÜ ŸÖÿ≥ÿ¨ŸëŸÑ ÿ®ŸÉŸàÿ±ÿ≥: "English Level 1". ÿ®ÿßŸÑÿ™ŸàŸÅŸäŸÇ üí™',
      'time': 'ÿßŸÑŸäŸàŸÖ - 10:00 ÿµÿ®ÿßÿ≠Ÿãÿß'
    },
    {
      'title': 'üéØ ŸÜÿµŸäÿ≠ÿ© ÿØÿ±ÿßÿ≥Ÿäÿ©',
      'body': 'ŸÇÿ≥ŸÖ ŸàŸÇÿ™ŸÉ Ÿàÿ≠ÿßŸàŸÑ ÿ™ÿ∞ÿßŸÉÿ± ÿ®ÿ™ÿ±ŸÉŸäÿ≤ 25 ÿØŸÇŸäŸÇÿ© Ÿàÿßÿ±ÿ™ÿßÿ≠ ÿ®ÿπÿØŸáÿßÿå ÿßÿ≥ŸÖŸáÿß ÿ∑ÿ±ŸäŸÇÿ© Pomodoro üòâ',
      'time': 'ÿ£ŸÖÿ≥ - 8:45 ŸÖÿ≥ÿßÿ°Ÿã'
    },
    {
      'title': 'üì¢ ÿ™ŸÖ ÿ•ÿ∂ÿßŸÅÿ© ŸÉŸàÿ±ÿ≥ ÿ¨ÿØŸäÿØ!',
      'body': 'ÿßŸÑÿ™ÿ≠ŸÇ ÿ®ŸÉŸàÿ±ÿ≥ ÿßŸÑÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ™ŸÜŸÅŸäÿ∞Ÿäÿ© ÿßŸÑÿ¢ŸÜ Ÿàÿßÿ≥ÿ™ŸÅÿØ ŸÖŸÜ ÿßŸÑŸÖÿ≠ÿßÿ∂ÿ±ÿßÿ™ ÿßŸÑÿ≠ÿµÿ±Ÿäÿ©.',
      'time': 'ŸÖŸÜÿ∞ 5 ÿØŸÇÿßÿ¶ŸÇ'
    },
    {
      'title': '‚úÖ ÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ÿ™ÿ≥ÿ¨ŸäŸÑŸÉ',
      'body': 'ÿ£ŸÜÿ™ ÿßŸÑÿ¢ŸÜ ŸÖÿ≥ÿ¨ŸëŸÑ ÿ®ŸÉŸàÿ±ÿ≥: "English Level 1". ÿ®ÿßŸÑÿ™ŸàŸÅŸäŸÇ üí™',
      'time': 'ÿßŸÑŸäŸàŸÖ - 10:00 ÿµÿ®ÿßÿ≠Ÿãÿß'
    },
    {
      'title': 'üéØ ŸÜÿµŸäÿ≠ÿ© ÿØÿ±ÿßÿ≥Ÿäÿ©',
      'body': 'ŸÇÿ≥ŸÖ ŸàŸÇÿ™ŸÉ Ÿàÿ≠ÿßŸàŸÑ ÿ™ÿ∞ÿßŸÉÿ± ÿ®ÿ™ÿ±ŸÉŸäÿ≤ 25 ÿØŸÇŸäŸÇÿ© Ÿàÿßÿ±ÿ™ÿßÿ≠ ÿ®ÿπÿØŸáÿßÿå ÿßÿ≥ŸÖŸáÿß ÿ∑ÿ±ŸäŸÇÿ© Pomodoro üòâ',
      'time': 'ÿ£ŸÖÿ≥ - 8:45 ŸÖÿ≥ÿßÿ°Ÿã'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Directionality(
      textDirection: TextDirection.rtl,
      child: Scaffold(
        appBar: AppBar(
          title: const Text("ÿßŸÑÿ•ÿ¥ÿπÿßÿ±ÿßÿ™", style: TextStyle(color: Colors.black)),
          backgroundColor: const Color(0xFFF9C19A),
          iconTheme: const IconThemeData(color: Colors.black),
          centerTitle: true,
        ),
        body: notifications.isEmpty
            ? const Center(
          child: Text(
            "ŸÖÿßŸÅŸäÿ¥ ÿ•ÿ¥ÿπÿßÿ±ÿßÿ™ ÿØŸÑŸàŸÇÿ™Ÿä üò¥",
            style: TextStyle(fontSize: 18, color: Colors.black87),
          ),
        )
            : ListView.separated(
          padding: const EdgeInsets.all(16),
          itemCount: notifications.length,
          separatorBuilder: (_, __) => const SizedBox(height: 12),
          itemBuilder: (context, index) {
            final item = notifications[index];

            return Dismissible(
              key: Key(item['title']! + index.toString()),
              direction: DismissDirection.endToStart, // ‚úÖ ŸäŸÖŸäŸÜ ŸÑŸÑŸäÿ≥ÿßÿ± ŸÅŸä RTL
              background: Container(
                alignment: Alignment.centerRight,
                padding: const EdgeInsets.symmetric(horizontal: 20),
                color: Colors.redAccent,
                child: const Icon(Icons.delete, color: Colors.white, size: 28),
              ),
              onDismissed: (_) {
                setState(() {
                  notifications.removeAt(index);
                });

                ScaffoldMessenger.of(context).showSnackBar(
                  const SnackBar(
                    content: Text('ÿ™ŸÖ ÿ≠ÿ∞ŸÅ ÿßŸÑÿ•ÿ¥ÿπÿßÿ± ‚úÖ'),
                    backgroundColor: Colors.redAccent,
                    duration: Duration(seconds: 2),
                  ),
                );
              },
              child: Card(
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
                elevation: 3,
                child: ListTile(
                  leading: CircleAvatar(
                    backgroundColor: Colors.deepOrange.shade100,
                    child: const Icon(Icons.notifications, color: Colors.deepOrange),
                  ),
                  title: Text(
                    item['title'] ?? '',
                    style: const TextStyle(
                      fontWeight: FontWeight.bold,
                      fontSize: 16,
                    ),
                  ),
                  subtitle: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const SizedBox(height: 4),
                      Text(
                        item['body'] ?? '',
                        style: const TextStyle(fontSize: 14),
                      ),
                      const SizedBox(height: 6),
                      Text(
                        item['time'] ?? '',
                        style: TextStyle(fontSize: 12, color: Colors.grey.shade600),
                      ),
                    ],
                  ),
                  isThreeLine: true,
                ),
              ),
            );
          },
        ),
      ),
    );
  }
}
